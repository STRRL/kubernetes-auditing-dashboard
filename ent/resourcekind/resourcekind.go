// Code generated by ent, DO NOT EDIT.

package resourcekind

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the resourcekind type in the database.
	Label = "resource_kind"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldApiVersion holds the string denoting the apiversion field in the database.
	FieldApiVersion = "api_version"
	// FieldNamespaced holds the string denoting the namespaced field in the database.
	FieldNamespaced = "namespaced"
	// FieldKind holds the string denoting the kind field in the database.
	FieldKind = "kind"
	// Table holds the table name of the resourcekind in the database.
	Table = "resource_kinds"
)

// Columns holds all SQL columns for resourcekind fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldApiVersion,
	FieldNamespaced,
	FieldKind,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// ApiVersionValidator is a validator for the "apiVersion" field. It is called by the builders before save.
	ApiVersionValidator func(string) error
	// DefaultNamespaced holds the default value on creation for the "namespaced" field.
	DefaultNamespaced bool
	// KindValidator is a validator for the "kind" field. It is called by the builders before save.
	KindValidator func(string) error
)

// OrderOption defines the ordering options for the ResourceKind queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByApiVersion orders the results by the apiVersion field.
func ByApiVersion(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldApiVersion, opts...).ToFunc()
}

// ByNamespaced orders the results by the namespaced field.
func ByNamespaced(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldNamespaced, opts...).ToFunc()
}

// ByKind orders the results by the kind field.
func ByKind(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldKind, opts...).ToFunc()
}
