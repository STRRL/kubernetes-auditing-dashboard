// Code generated by ent, DO NOT EDIT.

package auditevent

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/strrl/kubernetes-auditing-dashboard/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLTE(FieldID, id))
}

// Raw applies equality check predicate on the "raw" field. It's identical to RawEQ.
func Raw(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldRaw, v))
}

// Level applies equality check predicate on the "level" field. It's identical to LevelEQ.
func Level(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldLevel, v))
}

// AuditID applies equality check predicate on the "auditID" field. It's identical to AuditIDEQ.
func AuditID(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldAuditID, v))
}

// Verb applies equality check predicate on the "verb" field. It's identical to VerbEQ.
func Verb(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldVerb, v))
}

// UserAgent applies equality check predicate on the "userAgent" field. It's identical to UserAgentEQ.
func UserAgent(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldUserAgent, v))
}

// RequestTimestamp applies equality check predicate on the "requestTimestamp" field. It's identical to RequestTimestampEQ.
func RequestTimestamp(v time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldRequestTimestamp, v))
}

// StageTimestamp applies equality check predicate on the "stageTimestamp" field. It's identical to StageTimestampEQ.
func StageTimestamp(v time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldStageTimestamp, v))
}

// Namespace applies equality check predicate on the "namespace" field. It's identical to NamespaceEQ.
func Namespace(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldNamespace, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldName, v))
}

// ApiVersion applies equality check predicate on the "apiVersion" field. It's identical to ApiVersionEQ.
func ApiVersion(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldApiVersion, v))
}

// ApiGroup applies equality check predicate on the "apiGroup" field. It's identical to ApiGroupEQ.
func ApiGroup(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldApiGroup, v))
}

// Resource applies equality check predicate on the "resource" field. It's identical to ResourceEQ.
func Resource(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldResource, v))
}

// SubResource applies equality check predicate on the "subResource" field. It's identical to SubResourceEQ.
func SubResource(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldSubResource, v))
}

// Stage applies equality check predicate on the "stage" field. It's identical to StageEQ.
func Stage(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldStage, v))
}

// RawEQ applies the EQ predicate on the "raw" field.
func RawEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldRaw, v))
}

// RawNEQ applies the NEQ predicate on the "raw" field.
func RawNEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNEQ(FieldRaw, v))
}

// RawIn applies the In predicate on the "raw" field.
func RawIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldIn(FieldRaw, vs...))
}

// RawNotIn applies the NotIn predicate on the "raw" field.
func RawNotIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNotIn(FieldRaw, vs...))
}

// RawGT applies the GT predicate on the "raw" field.
func RawGT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGT(FieldRaw, v))
}

// RawGTE applies the GTE predicate on the "raw" field.
func RawGTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGTE(FieldRaw, v))
}

// RawLT applies the LT predicate on the "raw" field.
func RawLT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLT(FieldRaw, v))
}

// RawLTE applies the LTE predicate on the "raw" field.
func RawLTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLTE(FieldRaw, v))
}

// RawContains applies the Contains predicate on the "raw" field.
func RawContains(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContains(FieldRaw, v))
}

// RawHasPrefix applies the HasPrefix predicate on the "raw" field.
func RawHasPrefix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasPrefix(FieldRaw, v))
}

// RawHasSuffix applies the HasSuffix predicate on the "raw" field.
func RawHasSuffix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasSuffix(FieldRaw, v))
}

// RawEqualFold applies the EqualFold predicate on the "raw" field.
func RawEqualFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEqualFold(FieldRaw, v))
}

// RawContainsFold applies the ContainsFold predicate on the "raw" field.
func RawContainsFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContainsFold(FieldRaw, v))
}

// LevelEQ applies the EQ predicate on the "level" field.
func LevelEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldLevel, v))
}

// LevelNEQ applies the NEQ predicate on the "level" field.
func LevelNEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNEQ(FieldLevel, v))
}

// LevelIn applies the In predicate on the "level" field.
func LevelIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldIn(FieldLevel, vs...))
}

// LevelNotIn applies the NotIn predicate on the "level" field.
func LevelNotIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNotIn(FieldLevel, vs...))
}

// LevelGT applies the GT predicate on the "level" field.
func LevelGT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGT(FieldLevel, v))
}

// LevelGTE applies the GTE predicate on the "level" field.
func LevelGTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGTE(FieldLevel, v))
}

// LevelLT applies the LT predicate on the "level" field.
func LevelLT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLT(FieldLevel, v))
}

// LevelLTE applies the LTE predicate on the "level" field.
func LevelLTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLTE(FieldLevel, v))
}

// LevelContains applies the Contains predicate on the "level" field.
func LevelContains(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContains(FieldLevel, v))
}

// LevelHasPrefix applies the HasPrefix predicate on the "level" field.
func LevelHasPrefix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasPrefix(FieldLevel, v))
}

// LevelHasSuffix applies the HasSuffix predicate on the "level" field.
func LevelHasSuffix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasSuffix(FieldLevel, v))
}

// LevelEqualFold applies the EqualFold predicate on the "level" field.
func LevelEqualFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEqualFold(FieldLevel, v))
}

// LevelContainsFold applies the ContainsFold predicate on the "level" field.
func LevelContainsFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContainsFold(FieldLevel, v))
}

// AuditIDEQ applies the EQ predicate on the "auditID" field.
func AuditIDEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldAuditID, v))
}

// AuditIDNEQ applies the NEQ predicate on the "auditID" field.
func AuditIDNEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNEQ(FieldAuditID, v))
}

// AuditIDIn applies the In predicate on the "auditID" field.
func AuditIDIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldIn(FieldAuditID, vs...))
}

// AuditIDNotIn applies the NotIn predicate on the "auditID" field.
func AuditIDNotIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNotIn(FieldAuditID, vs...))
}

// AuditIDGT applies the GT predicate on the "auditID" field.
func AuditIDGT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGT(FieldAuditID, v))
}

// AuditIDGTE applies the GTE predicate on the "auditID" field.
func AuditIDGTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGTE(FieldAuditID, v))
}

// AuditIDLT applies the LT predicate on the "auditID" field.
func AuditIDLT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLT(FieldAuditID, v))
}

// AuditIDLTE applies the LTE predicate on the "auditID" field.
func AuditIDLTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLTE(FieldAuditID, v))
}

// AuditIDContains applies the Contains predicate on the "auditID" field.
func AuditIDContains(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContains(FieldAuditID, v))
}

// AuditIDHasPrefix applies the HasPrefix predicate on the "auditID" field.
func AuditIDHasPrefix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasPrefix(FieldAuditID, v))
}

// AuditIDHasSuffix applies the HasSuffix predicate on the "auditID" field.
func AuditIDHasSuffix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasSuffix(FieldAuditID, v))
}

// AuditIDEqualFold applies the EqualFold predicate on the "auditID" field.
func AuditIDEqualFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEqualFold(FieldAuditID, v))
}

// AuditIDContainsFold applies the ContainsFold predicate on the "auditID" field.
func AuditIDContainsFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContainsFold(FieldAuditID, v))
}

// VerbEQ applies the EQ predicate on the "verb" field.
func VerbEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldVerb, v))
}

// VerbNEQ applies the NEQ predicate on the "verb" field.
func VerbNEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNEQ(FieldVerb, v))
}

// VerbIn applies the In predicate on the "verb" field.
func VerbIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldIn(FieldVerb, vs...))
}

// VerbNotIn applies the NotIn predicate on the "verb" field.
func VerbNotIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNotIn(FieldVerb, vs...))
}

// VerbGT applies the GT predicate on the "verb" field.
func VerbGT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGT(FieldVerb, v))
}

// VerbGTE applies the GTE predicate on the "verb" field.
func VerbGTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGTE(FieldVerb, v))
}

// VerbLT applies the LT predicate on the "verb" field.
func VerbLT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLT(FieldVerb, v))
}

// VerbLTE applies the LTE predicate on the "verb" field.
func VerbLTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLTE(FieldVerb, v))
}

// VerbContains applies the Contains predicate on the "verb" field.
func VerbContains(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContains(FieldVerb, v))
}

// VerbHasPrefix applies the HasPrefix predicate on the "verb" field.
func VerbHasPrefix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasPrefix(FieldVerb, v))
}

// VerbHasSuffix applies the HasSuffix predicate on the "verb" field.
func VerbHasSuffix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasSuffix(FieldVerb, v))
}

// VerbEqualFold applies the EqualFold predicate on the "verb" field.
func VerbEqualFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEqualFold(FieldVerb, v))
}

// VerbContainsFold applies the ContainsFold predicate on the "verb" field.
func VerbContainsFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContainsFold(FieldVerb, v))
}

// UserAgentEQ applies the EQ predicate on the "userAgent" field.
func UserAgentEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldUserAgent, v))
}

// UserAgentNEQ applies the NEQ predicate on the "userAgent" field.
func UserAgentNEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNEQ(FieldUserAgent, v))
}

// UserAgentIn applies the In predicate on the "userAgent" field.
func UserAgentIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldIn(FieldUserAgent, vs...))
}

// UserAgentNotIn applies the NotIn predicate on the "userAgent" field.
func UserAgentNotIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNotIn(FieldUserAgent, vs...))
}

// UserAgentGT applies the GT predicate on the "userAgent" field.
func UserAgentGT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGT(FieldUserAgent, v))
}

// UserAgentGTE applies the GTE predicate on the "userAgent" field.
func UserAgentGTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGTE(FieldUserAgent, v))
}

// UserAgentLT applies the LT predicate on the "userAgent" field.
func UserAgentLT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLT(FieldUserAgent, v))
}

// UserAgentLTE applies the LTE predicate on the "userAgent" field.
func UserAgentLTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLTE(FieldUserAgent, v))
}

// UserAgentContains applies the Contains predicate on the "userAgent" field.
func UserAgentContains(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContains(FieldUserAgent, v))
}

// UserAgentHasPrefix applies the HasPrefix predicate on the "userAgent" field.
func UserAgentHasPrefix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasPrefix(FieldUserAgent, v))
}

// UserAgentHasSuffix applies the HasSuffix predicate on the "userAgent" field.
func UserAgentHasSuffix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasSuffix(FieldUserAgent, v))
}

// UserAgentEqualFold applies the EqualFold predicate on the "userAgent" field.
func UserAgentEqualFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEqualFold(FieldUserAgent, v))
}

// UserAgentContainsFold applies the ContainsFold predicate on the "userAgent" field.
func UserAgentContainsFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContainsFold(FieldUserAgent, v))
}

// RequestTimestampEQ applies the EQ predicate on the "requestTimestamp" field.
func RequestTimestampEQ(v time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldRequestTimestamp, v))
}

// RequestTimestampNEQ applies the NEQ predicate on the "requestTimestamp" field.
func RequestTimestampNEQ(v time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNEQ(FieldRequestTimestamp, v))
}

// RequestTimestampIn applies the In predicate on the "requestTimestamp" field.
func RequestTimestampIn(vs ...time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldIn(FieldRequestTimestamp, vs...))
}

// RequestTimestampNotIn applies the NotIn predicate on the "requestTimestamp" field.
func RequestTimestampNotIn(vs ...time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNotIn(FieldRequestTimestamp, vs...))
}

// RequestTimestampGT applies the GT predicate on the "requestTimestamp" field.
func RequestTimestampGT(v time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGT(FieldRequestTimestamp, v))
}

// RequestTimestampGTE applies the GTE predicate on the "requestTimestamp" field.
func RequestTimestampGTE(v time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGTE(FieldRequestTimestamp, v))
}

// RequestTimestampLT applies the LT predicate on the "requestTimestamp" field.
func RequestTimestampLT(v time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLT(FieldRequestTimestamp, v))
}

// RequestTimestampLTE applies the LTE predicate on the "requestTimestamp" field.
func RequestTimestampLTE(v time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLTE(FieldRequestTimestamp, v))
}

// StageTimestampEQ applies the EQ predicate on the "stageTimestamp" field.
func StageTimestampEQ(v time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldStageTimestamp, v))
}

// StageTimestampNEQ applies the NEQ predicate on the "stageTimestamp" field.
func StageTimestampNEQ(v time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNEQ(FieldStageTimestamp, v))
}

// StageTimestampIn applies the In predicate on the "stageTimestamp" field.
func StageTimestampIn(vs ...time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldIn(FieldStageTimestamp, vs...))
}

// StageTimestampNotIn applies the NotIn predicate on the "stageTimestamp" field.
func StageTimestampNotIn(vs ...time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNotIn(FieldStageTimestamp, vs...))
}

// StageTimestampGT applies the GT predicate on the "stageTimestamp" field.
func StageTimestampGT(v time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGT(FieldStageTimestamp, v))
}

// StageTimestampGTE applies the GTE predicate on the "stageTimestamp" field.
func StageTimestampGTE(v time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGTE(FieldStageTimestamp, v))
}

// StageTimestampLT applies the LT predicate on the "stageTimestamp" field.
func StageTimestampLT(v time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLT(FieldStageTimestamp, v))
}

// StageTimestampLTE applies the LTE predicate on the "stageTimestamp" field.
func StageTimestampLTE(v time.Time) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLTE(FieldStageTimestamp, v))
}

// NamespaceEQ applies the EQ predicate on the "namespace" field.
func NamespaceEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldNamespace, v))
}

// NamespaceNEQ applies the NEQ predicate on the "namespace" field.
func NamespaceNEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNEQ(FieldNamespace, v))
}

// NamespaceIn applies the In predicate on the "namespace" field.
func NamespaceIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldIn(FieldNamespace, vs...))
}

// NamespaceNotIn applies the NotIn predicate on the "namespace" field.
func NamespaceNotIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNotIn(FieldNamespace, vs...))
}

// NamespaceGT applies the GT predicate on the "namespace" field.
func NamespaceGT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGT(FieldNamespace, v))
}

// NamespaceGTE applies the GTE predicate on the "namespace" field.
func NamespaceGTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGTE(FieldNamespace, v))
}

// NamespaceLT applies the LT predicate on the "namespace" field.
func NamespaceLT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLT(FieldNamespace, v))
}

// NamespaceLTE applies the LTE predicate on the "namespace" field.
func NamespaceLTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLTE(FieldNamespace, v))
}

// NamespaceContains applies the Contains predicate on the "namespace" field.
func NamespaceContains(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContains(FieldNamespace, v))
}

// NamespaceHasPrefix applies the HasPrefix predicate on the "namespace" field.
func NamespaceHasPrefix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasPrefix(FieldNamespace, v))
}

// NamespaceHasSuffix applies the HasSuffix predicate on the "namespace" field.
func NamespaceHasSuffix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasSuffix(FieldNamespace, v))
}

// NamespaceEqualFold applies the EqualFold predicate on the "namespace" field.
func NamespaceEqualFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEqualFold(FieldNamespace, v))
}

// NamespaceContainsFold applies the ContainsFold predicate on the "namespace" field.
func NamespaceContainsFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContainsFold(FieldNamespace, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContainsFold(FieldName, v))
}

// ApiVersionEQ applies the EQ predicate on the "apiVersion" field.
func ApiVersionEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldApiVersion, v))
}

// ApiVersionNEQ applies the NEQ predicate on the "apiVersion" field.
func ApiVersionNEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNEQ(FieldApiVersion, v))
}

// ApiVersionIn applies the In predicate on the "apiVersion" field.
func ApiVersionIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldIn(FieldApiVersion, vs...))
}

// ApiVersionNotIn applies the NotIn predicate on the "apiVersion" field.
func ApiVersionNotIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNotIn(FieldApiVersion, vs...))
}

// ApiVersionGT applies the GT predicate on the "apiVersion" field.
func ApiVersionGT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGT(FieldApiVersion, v))
}

// ApiVersionGTE applies the GTE predicate on the "apiVersion" field.
func ApiVersionGTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGTE(FieldApiVersion, v))
}

// ApiVersionLT applies the LT predicate on the "apiVersion" field.
func ApiVersionLT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLT(FieldApiVersion, v))
}

// ApiVersionLTE applies the LTE predicate on the "apiVersion" field.
func ApiVersionLTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLTE(FieldApiVersion, v))
}

// ApiVersionContains applies the Contains predicate on the "apiVersion" field.
func ApiVersionContains(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContains(FieldApiVersion, v))
}

// ApiVersionHasPrefix applies the HasPrefix predicate on the "apiVersion" field.
func ApiVersionHasPrefix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasPrefix(FieldApiVersion, v))
}

// ApiVersionHasSuffix applies the HasSuffix predicate on the "apiVersion" field.
func ApiVersionHasSuffix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasSuffix(FieldApiVersion, v))
}

// ApiVersionEqualFold applies the EqualFold predicate on the "apiVersion" field.
func ApiVersionEqualFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEqualFold(FieldApiVersion, v))
}

// ApiVersionContainsFold applies the ContainsFold predicate on the "apiVersion" field.
func ApiVersionContainsFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContainsFold(FieldApiVersion, v))
}

// ApiGroupEQ applies the EQ predicate on the "apiGroup" field.
func ApiGroupEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldApiGroup, v))
}

// ApiGroupNEQ applies the NEQ predicate on the "apiGroup" field.
func ApiGroupNEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNEQ(FieldApiGroup, v))
}

// ApiGroupIn applies the In predicate on the "apiGroup" field.
func ApiGroupIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldIn(FieldApiGroup, vs...))
}

// ApiGroupNotIn applies the NotIn predicate on the "apiGroup" field.
func ApiGroupNotIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNotIn(FieldApiGroup, vs...))
}

// ApiGroupGT applies the GT predicate on the "apiGroup" field.
func ApiGroupGT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGT(FieldApiGroup, v))
}

// ApiGroupGTE applies the GTE predicate on the "apiGroup" field.
func ApiGroupGTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGTE(FieldApiGroup, v))
}

// ApiGroupLT applies the LT predicate on the "apiGroup" field.
func ApiGroupLT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLT(FieldApiGroup, v))
}

// ApiGroupLTE applies the LTE predicate on the "apiGroup" field.
func ApiGroupLTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLTE(FieldApiGroup, v))
}

// ApiGroupContains applies the Contains predicate on the "apiGroup" field.
func ApiGroupContains(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContains(FieldApiGroup, v))
}

// ApiGroupHasPrefix applies the HasPrefix predicate on the "apiGroup" field.
func ApiGroupHasPrefix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasPrefix(FieldApiGroup, v))
}

// ApiGroupHasSuffix applies the HasSuffix predicate on the "apiGroup" field.
func ApiGroupHasSuffix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasSuffix(FieldApiGroup, v))
}

// ApiGroupEqualFold applies the EqualFold predicate on the "apiGroup" field.
func ApiGroupEqualFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEqualFold(FieldApiGroup, v))
}

// ApiGroupContainsFold applies the ContainsFold predicate on the "apiGroup" field.
func ApiGroupContainsFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContainsFold(FieldApiGroup, v))
}

// ResourceEQ applies the EQ predicate on the "resource" field.
func ResourceEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldResource, v))
}

// ResourceNEQ applies the NEQ predicate on the "resource" field.
func ResourceNEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNEQ(FieldResource, v))
}

// ResourceIn applies the In predicate on the "resource" field.
func ResourceIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldIn(FieldResource, vs...))
}

// ResourceNotIn applies the NotIn predicate on the "resource" field.
func ResourceNotIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNotIn(FieldResource, vs...))
}

// ResourceGT applies the GT predicate on the "resource" field.
func ResourceGT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGT(FieldResource, v))
}

// ResourceGTE applies the GTE predicate on the "resource" field.
func ResourceGTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGTE(FieldResource, v))
}

// ResourceLT applies the LT predicate on the "resource" field.
func ResourceLT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLT(FieldResource, v))
}

// ResourceLTE applies the LTE predicate on the "resource" field.
func ResourceLTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLTE(FieldResource, v))
}

// ResourceContains applies the Contains predicate on the "resource" field.
func ResourceContains(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContains(FieldResource, v))
}

// ResourceHasPrefix applies the HasPrefix predicate on the "resource" field.
func ResourceHasPrefix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasPrefix(FieldResource, v))
}

// ResourceHasSuffix applies the HasSuffix predicate on the "resource" field.
func ResourceHasSuffix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasSuffix(FieldResource, v))
}

// ResourceEqualFold applies the EqualFold predicate on the "resource" field.
func ResourceEqualFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEqualFold(FieldResource, v))
}

// ResourceContainsFold applies the ContainsFold predicate on the "resource" field.
func ResourceContainsFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContainsFold(FieldResource, v))
}

// SubResourceEQ applies the EQ predicate on the "subResource" field.
func SubResourceEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldSubResource, v))
}

// SubResourceNEQ applies the NEQ predicate on the "subResource" field.
func SubResourceNEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNEQ(FieldSubResource, v))
}

// SubResourceIn applies the In predicate on the "subResource" field.
func SubResourceIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldIn(FieldSubResource, vs...))
}

// SubResourceNotIn applies the NotIn predicate on the "subResource" field.
func SubResourceNotIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNotIn(FieldSubResource, vs...))
}

// SubResourceGT applies the GT predicate on the "subResource" field.
func SubResourceGT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGT(FieldSubResource, v))
}

// SubResourceGTE applies the GTE predicate on the "subResource" field.
func SubResourceGTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGTE(FieldSubResource, v))
}

// SubResourceLT applies the LT predicate on the "subResource" field.
func SubResourceLT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLT(FieldSubResource, v))
}

// SubResourceLTE applies the LTE predicate on the "subResource" field.
func SubResourceLTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLTE(FieldSubResource, v))
}

// SubResourceContains applies the Contains predicate on the "subResource" field.
func SubResourceContains(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContains(FieldSubResource, v))
}

// SubResourceHasPrefix applies the HasPrefix predicate on the "subResource" field.
func SubResourceHasPrefix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasPrefix(FieldSubResource, v))
}

// SubResourceHasSuffix applies the HasSuffix predicate on the "subResource" field.
func SubResourceHasSuffix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasSuffix(FieldSubResource, v))
}

// SubResourceEqualFold applies the EqualFold predicate on the "subResource" field.
func SubResourceEqualFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEqualFold(FieldSubResource, v))
}

// SubResourceContainsFold applies the ContainsFold predicate on the "subResource" field.
func SubResourceContainsFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContainsFold(FieldSubResource, v))
}

// StageEQ applies the EQ predicate on the "stage" field.
func StageEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEQ(FieldStage, v))
}

// StageNEQ applies the NEQ predicate on the "stage" field.
func StageNEQ(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNEQ(FieldStage, v))
}

// StageIn applies the In predicate on the "stage" field.
func StageIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldIn(FieldStage, vs...))
}

// StageNotIn applies the NotIn predicate on the "stage" field.
func StageNotIn(vs ...string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldNotIn(FieldStage, vs...))
}

// StageGT applies the GT predicate on the "stage" field.
func StageGT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGT(FieldStage, v))
}

// StageGTE applies the GTE predicate on the "stage" field.
func StageGTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldGTE(FieldStage, v))
}

// StageLT applies the LT predicate on the "stage" field.
func StageLT(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLT(FieldStage, v))
}

// StageLTE applies the LTE predicate on the "stage" field.
func StageLTE(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldLTE(FieldStage, v))
}

// StageContains applies the Contains predicate on the "stage" field.
func StageContains(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContains(FieldStage, v))
}

// StageHasPrefix applies the HasPrefix predicate on the "stage" field.
func StageHasPrefix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasPrefix(FieldStage, v))
}

// StageHasSuffix applies the HasSuffix predicate on the "stage" field.
func StageHasSuffix(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldHasSuffix(FieldStage, v))
}

// StageEqualFold applies the EqualFold predicate on the "stage" field.
func StageEqualFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldEqualFold(FieldStage, v))
}

// StageContainsFold applies the ContainsFold predicate on the "stage" field.
func StageContainsFold(v string) predicate.AuditEvent {
	return predicate.AuditEvent(sql.FieldContainsFold(FieldStage, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AuditEvent) predicate.AuditEvent {
	return predicate.AuditEvent(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AuditEvent) predicate.AuditEvent {
	return predicate.AuditEvent(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AuditEvent) predicate.AuditEvent {
	return predicate.AuditEvent(func(s *sql.Selector) {
		p(s.Not())
	})
}
