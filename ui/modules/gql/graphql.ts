/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /**
   * Define a Relay Cursor type:
   * https://relay.dev/graphql/connections.htm#sec-Cursor
   */
  Cursor: any;
  /** Represents arbitrary JSON data */
  JSON: any;
  Time: any;
};

export type AuditEvent = Node & {
  __typename?: 'AuditEvent';
  apigroup: Scalars['String'];
  apiversion: Scalars['String'];
  auditid: Scalars['String'];
  id: Scalars['ID'];
  level: Scalars['String'];
  name: Scalars['String'];
  namespace: Scalars['String'];
  raw: Scalars['String'];
  requesttimestamp: Scalars['Time'];
  resource: Scalars['String'];
  stage: Scalars['String'];
  stagetimestamp: Scalars['Time'];
  subresource: Scalars['String'];
  useragent: Scalars['String'];
  verb: Scalars['String'];
};

/** A connection to a list of items. */
export type AuditEventConnection = {
  __typename?: 'AuditEventConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<AuditEventEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int'];
};

/** An edge in a connection. */
export type AuditEventEdge = {
  __typename?: 'AuditEventEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor'];
  /** The item at the end of the edge. */
  node?: Maybe<AuditEvent>;
};

/** Ordering options for AuditEvent connections */
export type AuditEventOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order AuditEvents. */
  field: AuditEventOrderField;
};

/** Properties by which AuditEvent connections can be ordered. */
export enum AuditEventOrderField {
  RequestTimestamp = 'REQUEST_TIMESTAMP',
  StageTimestamp = 'STAGE_TIMESTAMP'
}

export type AuditEventPagination = {
  __typename?: 'AuditEventPagination';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  page: Scalars['Int'];
  pageSize: Scalars['Int'];
  rows: Array<Maybe<AuditEvent>>;
  total: Scalars['Int'];
  totalPages: Scalars['Int'];
};

/**
 * AuditEventWhereInput is used for filtering AuditEvent objects.
 * Input was generated by ent.
 */
export type AuditEventWhereInput = {
  and?: InputMaybe<Array<AuditEventWhereInput>>;
  /** apiGroup field predicates */
  apigroup?: InputMaybe<Scalars['String']>;
  apigroupContains?: InputMaybe<Scalars['String']>;
  apigroupContainsFold?: InputMaybe<Scalars['String']>;
  apigroupEqualFold?: InputMaybe<Scalars['String']>;
  apigroupGT?: InputMaybe<Scalars['String']>;
  apigroupGTE?: InputMaybe<Scalars['String']>;
  apigroupHasPrefix?: InputMaybe<Scalars['String']>;
  apigroupHasSuffix?: InputMaybe<Scalars['String']>;
  apigroupIn?: InputMaybe<Array<Scalars['String']>>;
  apigroupLT?: InputMaybe<Scalars['String']>;
  apigroupLTE?: InputMaybe<Scalars['String']>;
  apigroupNEQ?: InputMaybe<Scalars['String']>;
  apigroupNotIn?: InputMaybe<Array<Scalars['String']>>;
  /** apiVersion field predicates */
  apiversion?: InputMaybe<Scalars['String']>;
  apiversionContains?: InputMaybe<Scalars['String']>;
  apiversionContainsFold?: InputMaybe<Scalars['String']>;
  apiversionEqualFold?: InputMaybe<Scalars['String']>;
  apiversionGT?: InputMaybe<Scalars['String']>;
  apiversionGTE?: InputMaybe<Scalars['String']>;
  apiversionHasPrefix?: InputMaybe<Scalars['String']>;
  apiversionHasSuffix?: InputMaybe<Scalars['String']>;
  apiversionIn?: InputMaybe<Array<Scalars['String']>>;
  apiversionLT?: InputMaybe<Scalars['String']>;
  apiversionLTE?: InputMaybe<Scalars['String']>;
  apiversionNEQ?: InputMaybe<Scalars['String']>;
  apiversionNotIn?: InputMaybe<Array<Scalars['String']>>;
  /** auditID field predicates */
  auditid?: InputMaybe<Scalars['String']>;
  auditidContains?: InputMaybe<Scalars['String']>;
  auditidContainsFold?: InputMaybe<Scalars['String']>;
  auditidEqualFold?: InputMaybe<Scalars['String']>;
  auditidGT?: InputMaybe<Scalars['String']>;
  auditidGTE?: InputMaybe<Scalars['String']>;
  auditidHasPrefix?: InputMaybe<Scalars['String']>;
  auditidHasSuffix?: InputMaybe<Scalars['String']>;
  auditidIn?: InputMaybe<Array<Scalars['String']>>;
  auditidLT?: InputMaybe<Scalars['String']>;
  auditidLTE?: InputMaybe<Scalars['String']>;
  auditidNEQ?: InputMaybe<Scalars['String']>;
  auditidNotIn?: InputMaybe<Array<Scalars['String']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']>;
  idGT?: InputMaybe<Scalars['ID']>;
  idGTE?: InputMaybe<Scalars['ID']>;
  idIn?: InputMaybe<Array<Scalars['ID']>>;
  idLT?: InputMaybe<Scalars['ID']>;
  idLTE?: InputMaybe<Scalars['ID']>;
  idNEQ?: InputMaybe<Scalars['ID']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']>>;
  /** level field predicates */
  level?: InputMaybe<Scalars['String']>;
  levelContains?: InputMaybe<Scalars['String']>;
  levelContainsFold?: InputMaybe<Scalars['String']>;
  levelEqualFold?: InputMaybe<Scalars['String']>;
  levelGT?: InputMaybe<Scalars['String']>;
  levelGTE?: InputMaybe<Scalars['String']>;
  levelHasPrefix?: InputMaybe<Scalars['String']>;
  levelHasSuffix?: InputMaybe<Scalars['String']>;
  levelIn?: InputMaybe<Array<Scalars['String']>>;
  levelLT?: InputMaybe<Scalars['String']>;
  levelLTE?: InputMaybe<Scalars['String']>;
  levelNEQ?: InputMaybe<Scalars['String']>;
  levelNotIn?: InputMaybe<Array<Scalars['String']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']>;
  nameContains?: InputMaybe<Scalars['String']>;
  nameContainsFold?: InputMaybe<Scalars['String']>;
  nameEqualFold?: InputMaybe<Scalars['String']>;
  nameGT?: InputMaybe<Scalars['String']>;
  nameGTE?: InputMaybe<Scalars['String']>;
  nameHasPrefix?: InputMaybe<Scalars['String']>;
  nameHasSuffix?: InputMaybe<Scalars['String']>;
  nameIn?: InputMaybe<Array<Scalars['String']>>;
  nameLT?: InputMaybe<Scalars['String']>;
  nameLTE?: InputMaybe<Scalars['String']>;
  nameNEQ?: InputMaybe<Scalars['String']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']>>;
  /** namespace field predicates */
  namespace?: InputMaybe<Scalars['String']>;
  namespaceContains?: InputMaybe<Scalars['String']>;
  namespaceContainsFold?: InputMaybe<Scalars['String']>;
  namespaceEqualFold?: InputMaybe<Scalars['String']>;
  namespaceGT?: InputMaybe<Scalars['String']>;
  namespaceGTE?: InputMaybe<Scalars['String']>;
  namespaceHasPrefix?: InputMaybe<Scalars['String']>;
  namespaceHasSuffix?: InputMaybe<Scalars['String']>;
  namespaceIn?: InputMaybe<Array<Scalars['String']>>;
  namespaceLT?: InputMaybe<Scalars['String']>;
  namespaceLTE?: InputMaybe<Scalars['String']>;
  namespaceNEQ?: InputMaybe<Scalars['String']>;
  namespaceNotIn?: InputMaybe<Array<Scalars['String']>>;
  not?: InputMaybe<AuditEventWhereInput>;
  or?: InputMaybe<Array<AuditEventWhereInput>>;
  /** raw field predicates */
  raw?: InputMaybe<Scalars['String']>;
  rawContains?: InputMaybe<Scalars['String']>;
  rawContainsFold?: InputMaybe<Scalars['String']>;
  rawEqualFold?: InputMaybe<Scalars['String']>;
  rawGT?: InputMaybe<Scalars['String']>;
  rawGTE?: InputMaybe<Scalars['String']>;
  rawHasPrefix?: InputMaybe<Scalars['String']>;
  rawHasSuffix?: InputMaybe<Scalars['String']>;
  rawIn?: InputMaybe<Array<Scalars['String']>>;
  rawLT?: InputMaybe<Scalars['String']>;
  rawLTE?: InputMaybe<Scalars['String']>;
  rawNEQ?: InputMaybe<Scalars['String']>;
  rawNotIn?: InputMaybe<Array<Scalars['String']>>;
  /** requestTimestamp field predicates */
  requesttimestamp?: InputMaybe<Scalars['Time']>;
  requesttimestampGT?: InputMaybe<Scalars['Time']>;
  requesttimestampGTE?: InputMaybe<Scalars['Time']>;
  requesttimestampIn?: InputMaybe<Array<Scalars['Time']>>;
  requesttimestampLT?: InputMaybe<Scalars['Time']>;
  requesttimestampLTE?: InputMaybe<Scalars['Time']>;
  requesttimestampNEQ?: InputMaybe<Scalars['Time']>;
  requesttimestampNotIn?: InputMaybe<Array<Scalars['Time']>>;
  /** resource field predicates */
  resource?: InputMaybe<Scalars['String']>;
  resourceContains?: InputMaybe<Scalars['String']>;
  resourceContainsFold?: InputMaybe<Scalars['String']>;
  resourceEqualFold?: InputMaybe<Scalars['String']>;
  resourceGT?: InputMaybe<Scalars['String']>;
  resourceGTE?: InputMaybe<Scalars['String']>;
  resourceHasPrefix?: InputMaybe<Scalars['String']>;
  resourceHasSuffix?: InputMaybe<Scalars['String']>;
  resourceIn?: InputMaybe<Array<Scalars['String']>>;
  resourceLT?: InputMaybe<Scalars['String']>;
  resourceLTE?: InputMaybe<Scalars['String']>;
  resourceNEQ?: InputMaybe<Scalars['String']>;
  resourceNotIn?: InputMaybe<Array<Scalars['String']>>;
  /** stage field predicates */
  stage?: InputMaybe<Scalars['String']>;
  stageContains?: InputMaybe<Scalars['String']>;
  stageContainsFold?: InputMaybe<Scalars['String']>;
  stageEqualFold?: InputMaybe<Scalars['String']>;
  stageGT?: InputMaybe<Scalars['String']>;
  stageGTE?: InputMaybe<Scalars['String']>;
  stageHasPrefix?: InputMaybe<Scalars['String']>;
  stageHasSuffix?: InputMaybe<Scalars['String']>;
  stageIn?: InputMaybe<Array<Scalars['String']>>;
  stageLT?: InputMaybe<Scalars['String']>;
  stageLTE?: InputMaybe<Scalars['String']>;
  stageNEQ?: InputMaybe<Scalars['String']>;
  stageNotIn?: InputMaybe<Array<Scalars['String']>>;
  /** stageTimestamp field predicates */
  stagetimestamp?: InputMaybe<Scalars['Time']>;
  stagetimestampGT?: InputMaybe<Scalars['Time']>;
  stagetimestampGTE?: InputMaybe<Scalars['Time']>;
  stagetimestampIn?: InputMaybe<Array<Scalars['Time']>>;
  stagetimestampLT?: InputMaybe<Scalars['Time']>;
  stagetimestampLTE?: InputMaybe<Scalars['Time']>;
  stagetimestampNEQ?: InputMaybe<Scalars['Time']>;
  stagetimestampNotIn?: InputMaybe<Array<Scalars['Time']>>;
  /** subResource field predicates */
  subresource?: InputMaybe<Scalars['String']>;
  subresourceContains?: InputMaybe<Scalars['String']>;
  subresourceContainsFold?: InputMaybe<Scalars['String']>;
  subresourceEqualFold?: InputMaybe<Scalars['String']>;
  subresourceGT?: InputMaybe<Scalars['String']>;
  subresourceGTE?: InputMaybe<Scalars['String']>;
  subresourceHasPrefix?: InputMaybe<Scalars['String']>;
  subresourceHasSuffix?: InputMaybe<Scalars['String']>;
  subresourceIn?: InputMaybe<Array<Scalars['String']>>;
  subresourceLT?: InputMaybe<Scalars['String']>;
  subresourceLTE?: InputMaybe<Scalars['String']>;
  subresourceNEQ?: InputMaybe<Scalars['String']>;
  subresourceNotIn?: InputMaybe<Array<Scalars['String']>>;
  /** userAgent field predicates */
  useragent?: InputMaybe<Scalars['String']>;
  useragentContains?: InputMaybe<Scalars['String']>;
  useragentContainsFold?: InputMaybe<Scalars['String']>;
  useragentEqualFold?: InputMaybe<Scalars['String']>;
  useragentGT?: InputMaybe<Scalars['String']>;
  useragentGTE?: InputMaybe<Scalars['String']>;
  useragentHasPrefix?: InputMaybe<Scalars['String']>;
  useragentHasSuffix?: InputMaybe<Scalars['String']>;
  useragentIn?: InputMaybe<Array<Scalars['String']>>;
  useragentLT?: InputMaybe<Scalars['String']>;
  useragentLTE?: InputMaybe<Scalars['String']>;
  useragentNEQ?: InputMaybe<Scalars['String']>;
  useragentNotIn?: InputMaybe<Array<Scalars['String']>>;
  /** verb field predicates */
  verb?: InputMaybe<Scalars['String']>;
  verbContains?: InputMaybe<Scalars['String']>;
  verbContainsFold?: InputMaybe<Scalars['String']>;
  verbEqualFold?: InputMaybe<Scalars['String']>;
  verbGT?: InputMaybe<Scalars['String']>;
  verbGTE?: InputMaybe<Scalars['String']>;
  verbHasPrefix?: InputMaybe<Scalars['String']>;
  verbHasSuffix?: InputMaybe<Scalars['String']>;
  verbIn?: InputMaybe<Array<Scalars['String']>>;
  verbLT?: InputMaybe<Scalars['String']>;
  verbLTE?: InputMaybe<Scalars['String']>;
  verbNEQ?: InputMaybe<Scalars['String']>;
  verbNotIn?: InputMaybe<Array<Scalars['String']>>;
};

/** Represents a single field change in a diff */
export type DiffEntry = {
  __typename?: 'DiffEntry';
  /** New value after the change */
  newValue: Scalars['JSON'];
  /** Previous value before the change */
  oldValue: Scalars['JSON'];
  /** JSON path to the changed field (e.g., "spec.replicas") */
  path: Scalars['String'];
};

/** Type of lifecycle event */
export enum EventType {
  /** Resource was created */
  Create = 'CREATE',
  /** Resource was deleted */
  Delete = 'DELETE',
  /** Resource was read/accessed */
  Get = 'GET',
  /** Resource was updated or patched */
  Update = 'UPDATE'
}

/** Represents a single lifecycle event for a Kubernetes resource */
export type LifecycleEvent = {
  __typename?: 'LifecycleEvent';
  /** Diff showing changes from previous version (null for CREATE and DELETE events) */
  diff?: Maybe<ResourceDiff>;
  /** Unique identifier for the audit event */
  id: Scalars['ID'];
  /** Complete resource state at the time of this event (YAML as JSON) */
  resourceState: Scalars['JSON'];
  /** ISO 8601 timestamp when the event occurred */
  timestamp: Scalars['Time'];
  /** Type of lifecycle event */
  type: EventType;
  /** User or service account that triggered the event */
  user: Scalars['String'];
};

export type Mutation = {
  __typename?: 'Mutation';
  importResourceKindTSV: Scalars['Int'];
};


export type MutationImportResourceKindTsvArgs = {
  tsv: Scalars['String'];
};

/**
 * An object with an ID.
 * Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
 */
export type Node = {
  /** The id of the object. */
  id: Scalars['ID'];
};

/** Possible directions in which to order a list of items when provided an `orderBy` argument. */
export enum OrderDirection {
  /** Specifies an ascending order for a given `orderBy` argument. */
  Asc = 'ASC',
  /** Specifies a descending order for a given `orderBy` argument. */
  Desc = 'DESC'
}

/**
 * Information about pagination in a connection.
 * https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
 */
export type PageInfo = {
  __typename?: 'PageInfo';
  /** When paginating forwards, the cursor to continue. */
  endCursor?: Maybe<Scalars['Cursor']>;
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean'];
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean'];
  /** When paginating backwards, the cursor to continue. */
  startCursor?: Maybe<Scalars['Cursor']>;
};

export type Query = {
  __typename?: 'Query';
  auditEvents: AuditEventConnection;
  completedRequestResponseAuditEvents: AuditEventPagination;
  /** Fetches an object given its ID. */
  node?: Maybe<Node>;
  /** Lookup nodes by a list of IDs. */
  nodes: Array<Maybe<Node>>;
  resourceKinds: ResourceKindConnection;
  /**
   * Retrieve the complete lifecycle history of a Kubernetes resource.
   * Returns events in reverse chronological order (newest first).
   */
  resourceLifecycle: Array<LifecycleEvent>;
};


export type QueryAuditEventsArgs = {
  after?: InputMaybe<Scalars['Cursor']>;
  before?: InputMaybe<Scalars['Cursor']>;
  first?: InputMaybe<Scalars['Int']>;
  last?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<AuditEventOrder>;
  where?: InputMaybe<AuditEventWhereInput>;
};


export type QueryCompletedRequestResponseAuditEventsArgs = {
  page?: InputMaybe<Scalars['Int']>;
  pageSize?: InputMaybe<Scalars['Int']>;
};


export type QueryNodeArgs = {
  id: Scalars['ID'];
};


export type QueryNodesArgs = {
  ids: Array<Scalars['ID']>;
};


export type QueryResourceKindsArgs = {
  after?: InputMaybe<Scalars['Cursor']>;
  before?: InputMaybe<Scalars['Cursor']>;
  first?: InputMaybe<Scalars['Int']>;
  last?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ResourceKindWhereInput>;
};


export type QueryResourceLifecycleArgs = {
  apiGroup: Scalars['String'];
  kind: Scalars['String'];
  name: Scalars['String'];
  namespace?: InputMaybe<Scalars['String']>;
  version: Scalars['String'];
};

/** Represents the diff between two consecutive resource versions */
export type ResourceDiff = {
  __typename?: 'ResourceDiff';
  /** Fields that were added in this update */
  added?: Maybe<Scalars['JSON']>;
  /** Fields that were modified, with old and new values */
  modified: Array<DiffEntry>;
  /** Fields that were removed in this update */
  removed?: Maybe<Scalars['JSON']>;
};

export type ResourceKind = Node & {
  __typename?: 'ResourceKind';
  apiversion: Scalars['String'];
  id: Scalars['ID'];
  kind: Scalars['String'];
  name: Scalars['String'];
  namespaced: Scalars['Boolean'];
};

/** A connection to a list of items. */
export type ResourceKindConnection = {
  __typename?: 'ResourceKindConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ResourceKindEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int'];
};

/** An edge in a connection. */
export type ResourceKindEdge = {
  __typename?: 'ResourceKindEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor'];
  /** The item at the end of the edge. */
  node?: Maybe<ResourceKind>;
};

/**
 * ResourceKindWhereInput is used for filtering ResourceKind objects.
 * Input was generated by ent.
 */
export type ResourceKindWhereInput = {
  and?: InputMaybe<Array<ResourceKindWhereInput>>;
  /** apiVersion field predicates */
  apiversion?: InputMaybe<Scalars['String']>;
  apiversionContains?: InputMaybe<Scalars['String']>;
  apiversionContainsFold?: InputMaybe<Scalars['String']>;
  apiversionEqualFold?: InputMaybe<Scalars['String']>;
  apiversionGT?: InputMaybe<Scalars['String']>;
  apiversionGTE?: InputMaybe<Scalars['String']>;
  apiversionHasPrefix?: InputMaybe<Scalars['String']>;
  apiversionHasSuffix?: InputMaybe<Scalars['String']>;
  apiversionIn?: InputMaybe<Array<Scalars['String']>>;
  apiversionLT?: InputMaybe<Scalars['String']>;
  apiversionLTE?: InputMaybe<Scalars['String']>;
  apiversionNEQ?: InputMaybe<Scalars['String']>;
  apiversionNotIn?: InputMaybe<Array<Scalars['String']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']>;
  idGT?: InputMaybe<Scalars['ID']>;
  idGTE?: InputMaybe<Scalars['ID']>;
  idIn?: InputMaybe<Array<Scalars['ID']>>;
  idLT?: InputMaybe<Scalars['ID']>;
  idLTE?: InputMaybe<Scalars['ID']>;
  idNEQ?: InputMaybe<Scalars['ID']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']>>;
  /** kind field predicates */
  kind?: InputMaybe<Scalars['String']>;
  kindContains?: InputMaybe<Scalars['String']>;
  kindContainsFold?: InputMaybe<Scalars['String']>;
  kindEqualFold?: InputMaybe<Scalars['String']>;
  kindGT?: InputMaybe<Scalars['String']>;
  kindGTE?: InputMaybe<Scalars['String']>;
  kindHasPrefix?: InputMaybe<Scalars['String']>;
  kindHasSuffix?: InputMaybe<Scalars['String']>;
  kindIn?: InputMaybe<Array<Scalars['String']>>;
  kindLT?: InputMaybe<Scalars['String']>;
  kindLTE?: InputMaybe<Scalars['String']>;
  kindNEQ?: InputMaybe<Scalars['String']>;
  kindNotIn?: InputMaybe<Array<Scalars['String']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']>;
  nameContains?: InputMaybe<Scalars['String']>;
  nameContainsFold?: InputMaybe<Scalars['String']>;
  nameEqualFold?: InputMaybe<Scalars['String']>;
  nameGT?: InputMaybe<Scalars['String']>;
  nameGTE?: InputMaybe<Scalars['String']>;
  nameHasPrefix?: InputMaybe<Scalars['String']>;
  nameHasSuffix?: InputMaybe<Scalars['String']>;
  nameIn?: InputMaybe<Array<Scalars['String']>>;
  nameLT?: InputMaybe<Scalars['String']>;
  nameLTE?: InputMaybe<Scalars['String']>;
  nameNEQ?: InputMaybe<Scalars['String']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']>>;
  /** namespaced field predicates */
  namespaced?: InputMaybe<Scalars['Boolean']>;
  namespacedNEQ?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<ResourceKindWhereInput>;
  or?: InputMaybe<Array<ResourceKindWhereInput>>;
};

export type View = Node & {
  __typename?: 'View';
  id: Scalars['ID'];
};

/**
 * ViewWhereInput is used for filtering View objects.
 * Input was generated by ent.
 */
export type ViewWhereInput = {
  and?: InputMaybe<Array<ViewWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']>;
  idGT?: InputMaybe<Scalars['ID']>;
  idGTE?: InputMaybe<Scalars['ID']>;
  idIn?: InputMaybe<Array<Scalars['ID']>>;
  idLT?: InputMaybe<Scalars['ID']>;
  idLTE?: InputMaybe<Scalars['ID']>;
  idNEQ?: InputMaybe<Scalars['ID']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ViewWhereInput>;
  or?: InputMaybe<Array<ViewWhereInput>>;
};

export type EventsCountQueryVariables = Exact<{ [key: string]: never; }>;


export type EventsCountQuery = { __typename?: 'Query', auditEvents: { __typename?: 'AuditEventConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasNextPage: boolean, hasPreviousPage: boolean, startCursor?: any | null, endCursor?: any | null } } };

export type CompletedRequestResponseAuditEventsQueryVariables = Exact<{
  page?: InputMaybe<Scalars['Int']>;
  pageSize?: InputMaybe<Scalars['Int']>;
}>;


export type CompletedRequestResponseAuditEventsQuery = { __typename?: 'Query', completedRequestResponseAuditEvents: { __typename?: 'AuditEventPagination', total: number, page: number, pageSize: number, totalPages: number, hasNextPage: boolean, hasPreviousPage: boolean, rows: Array<{ __typename?: 'AuditEvent', id: string, level: string, stage: string, verb: string, useragent: string, resource: string, namespace: string, name: string, stagetimestamp: any, apigroup: string, apiversion: string } | null> } };

export type EventsCountNonGetQueryVariables = Exact<{ [key: string]: never; }>;


export type EventsCountNonGetQuery = { __typename?: 'Query', auditEvents: { __typename?: 'AuditEventConnection', totalCount: number } };

export type GetResourceLifecycleQueryVariables = Exact<{
  apiGroup: Scalars['String'];
  version: Scalars['String'];
  kind: Scalars['String'];
  namespace?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
}>;


export type GetResourceLifecycleQuery = { __typename?: 'Query', resourceLifecycle: Array<{ __typename?: 'LifecycleEvent', id: string, type: EventType, timestamp: any, user: string, resourceState: any, diff?: { __typename?: 'ResourceDiff', added?: any | null, removed?: any | null, modified: Array<{ __typename?: 'DiffEntry', path: string, oldValue: any, newValue: any }> } | null }> };


export const EventsCountDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"eventsCount"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"auditEvents"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}}]}}]}}]} as unknown as DocumentNode<EventsCountQuery, EventsCountQueryVariables>;
export const CompletedRequestResponseAuditEventsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"completedRequestResponseAuditEvents"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pageSize"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"completedRequestResponseAuditEvents"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}},{"kind":"Argument","name":{"kind":"Name","value":"pageSize"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pageSize"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"total"}},{"kind":"Field","name":{"kind":"Name","value":"page"}},{"kind":"Field","name":{"kind":"Name","value":"pageSize"}},{"kind":"Field","name":{"kind":"Name","value":"totalPages"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"rows"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"level"}},{"kind":"Field","name":{"kind":"Name","value":"stage"}},{"kind":"Field","name":{"kind":"Name","value":"verb"}},{"kind":"Field","name":{"kind":"Name","value":"useragent"}},{"kind":"Field","name":{"kind":"Name","value":"resource"}},{"kind":"Field","name":{"kind":"Name","value":"namespace"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"stagetimestamp"}},{"kind":"Field","name":{"kind":"Name","value":"apigroup"}},{"kind":"Field","name":{"kind":"Name","value":"apiversion"}}]}}]}}]}}]} as unknown as DocumentNode<CompletedRequestResponseAuditEventsQuery, CompletedRequestResponseAuditEventsQueryVariables>;
export const EventsCountNonGetDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"eventsCountNonGet"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"auditEvents"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"verb"},"value":{"kind":"StringValue","value":"watch","block":false}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}}]}}]} as unknown as DocumentNode<EventsCountNonGetQuery, EventsCountNonGetQueryVariables>;
export const GetResourceLifecycleDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetResourceLifecycle"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"apiGroup"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"version"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"kind"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"namespace"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"resourceLifecycle"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"apiGroup"},"value":{"kind":"Variable","name":{"kind":"Name","value":"apiGroup"}}},{"kind":"Argument","name":{"kind":"Name","value":"version"},"value":{"kind":"Variable","name":{"kind":"Name","value":"version"}}},{"kind":"Argument","name":{"kind":"Name","value":"kind"},"value":{"kind":"Variable","name":{"kind":"Name","value":"kind"}}},{"kind":"Argument","name":{"kind":"Name","value":"namespace"},"value":{"kind":"Variable","name":{"kind":"Name","value":"namespace"}}},{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"user"}},{"kind":"Field","name":{"kind":"Name","value":"resourceState"}},{"kind":"Field","name":{"kind":"Name","value":"diff"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"added"}},{"kind":"Field","name":{"kind":"Name","value":"removed"}},{"kind":"Field","name":{"kind":"Name","value":"modified"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}},{"kind":"Field","name":{"kind":"Name","value":"oldValue"}},{"kind":"Field","name":{"kind":"Name","value":"newValue"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetResourceLifecycleQuery, GetResourceLifecycleQueryVariables>;